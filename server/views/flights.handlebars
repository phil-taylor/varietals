<!DOCTYPE html>
<html>
<head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <!--STYLES END-->

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.1/css/foundation.min.css">
    <link rel="stylesheet" href="http://js.arcgis.com/3.12/esri/css/esri.css">
    <link rel="stylesheet" href="/styles/varietals.css">

    <script type="application/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <!--script type="application/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.1/js/foundation.min.js"></script-->
    <script type="application/javascript" src="http://js.arcgis.com/3.12/"></script>
</head>

<body>


<style type="text/css">


    table {
        width: 600px;
        margin: 0 auto;
    }

    @media only screen and (min-width :50px) and (max-width :600px)
    {


        table {
            width: 100% !important;
            margin: 0 auto !important;
        }
    }
</style>


<table border="0" cellpadding="0" cellspacing="0" height="100%" width="100%" id="bodyTable">

    <td align="center" valign="top">
        <h1>Book Your Flight</h1>
        <table border="0" cellpadding="20" cellspacing="0" id="emailContainer">
            <tr>

                <td height="72" align="center" valign="top">

                    <table border="0" cellpadding="0" cellspacing="0" width="100%" id="emailHeader">
                        <tr>
                            <td align="left" valign="top" height="72px" width="100%">

                                <div id="map"></div>

                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td align="center" valign="top">


                    <h2>Available Flights</h2>

                    <ul>
                        {{#each flights}}
                        <li>
                            <dl>
                                <dt>{{DepartureDateTime}} - {{ReturnDateTime}}</dt>
                                <dd>rates from ${{LowestFare}} (lowest) or ${{LowestNonStopFare}} (nonstop)</dd>
                            </dl>
                        </li>
                        {{/each}}
                    </ul>

                </td>
            </tr>
            <tr>
                <td align="center" valign="top">
                    <table border="0" cellpadding="0" cellspacing="0" width="100%" id="emailFooter"  style="color:#9b9b9b; font-family: Roboto, Helvetica, 'Trebuchet MS', sans-serif; font-size: 14px; font-weight: 100;">



                        <tr>
                            <td align="left" valign="top" style="padding-top: 20px;">
                                <hr color="#b7a930" size="1px">
                            </td>
                        </tr>




                    </table>
                </td>
            </tr>
        </table>
    </td>
    </tr>
</table>




<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/linker/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit your Gruntfile.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
-->

<!--TEMPLATES-->
<!--TEMPLATES END-->

<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, filesin your `assets/linker/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit your Gruntfile.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

-->

<!--SCRIPTS-->
<script>
    var map;


    require(["esri/map", "esri/graphic", "esri/geometry/Point", "esri/geometry/Polyline", "esri/symbols/SimpleLineSymbol", "dojo/domReady!"], function(Map) {

        var sourcePoint = new esri.geometry.Point(-122.587, 45.5867);
        var destPoint = new esri.geometry.Point(-122.392, 37.6148);

        map = new Map("map", {
            basemap: "streets",
            center: [-122.45, 37.75], // longitude, latitude
            zoom: 4
        });

        var sms = new esri.symbol.SimpleMarkerSymbol().setStyle(
                        esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE).setColor(
                        new esri.Color([255,0,0,0.5]));

        var sls = new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,
                new esri.Color([255,0,0,0.5]), 3);

        var sourceMarker = new esri.Graphic(sourcePoint, sms);
        var destMarker = new esri.Graphic(destPoint, sms);

        var linePath = new esri.geometry.Polyline([[-122.587, 45.5867],[-122.392, 37.6148]]);


        var line = new esri.Graphic(linePath, sls);

        map.on("load", function(){
            map.graphics.add(sourceMarker);
            map.graphics.add(destMarker);
            map.graphics.add(line);

        })


    });
</script>

<!--SCRIPTS END-->
</body>
</html>
